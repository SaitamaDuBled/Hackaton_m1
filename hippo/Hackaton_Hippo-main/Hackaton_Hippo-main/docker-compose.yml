version: "3.8"

services:
  postgres:
    build:
      context: ./localPostgres
      dockerfile: Dockerfile-postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${PG_PORT}:5432"
    networks:
      - my_network

  pgadmin:
    build:
      context: ./localPostgres
      dockerfile: Dockerfile-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD : ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PG_ADMIN_PORT}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - my_network

  api:
    build:
      context: ./api_hyppo
      dockerfile: Dockerfile
      args:
        - API_PORT=${API_PORT}
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./api_hyppo:/app
      - api-data:/app/data
    environment:
      - NODE_ENV=development
      - API_PORT=${API_PORT}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB=${PG_DB}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
    command: sh -c "npm install && npm start && npm run seed"
    networks:
      - my_network

  front:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - FRONT_PORT=${FRONT_PORT}
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    environment:
      - FRONT_PORT=${FRONT_PORT}
      - API_PORT=${API_PORT}
      - API_ADDRESS=${API_ADDRESS}
    volumes:
      - ./frontend:/app
      - front-data:/app/data

volumes:
  api-data:
  front-data:
  postgres-data:
  pgadmin-data:

networks:
  my_network:
    driver: bridge